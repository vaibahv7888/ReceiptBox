/*
	SDZvw_ExpenseType.h
	The implementation of properties and methods for the SDZvw_ExpenseType object.
	Generated by SudzC.com
*/
#import "SDZvw_ExpenseType.h"

@implementation SDZvw_ExpenseType
@synthesize Active = _Active;
@synthesize ERPId = _ERPId;
@synthesize ExpenseType = _ExpenseType;
@synthesize ExpenseTypeId = _ExpenseTypeId;
@synthesize PolicyFlag = _PolicyFlag;
@synthesize Amount = _Amount;
@synthesize IsReceiptPolicy = _IsReceiptPolicy;
@synthesize ReceiptPolicyAmount = _ReceiptPolicyAmount;
@synthesize AlternateAmountLabel = _AlternateAmountLabel;
@synthesize AlternateRateLabel = _AlternateRateLabel;
@synthesize IsMileage = _IsMileage;
@synthesize EnableMultiplier = _EnableMultiplier;
@synthesize DisableVATFields = _DisableVATFields;
@synthesize ExpTypeCategory=_ExpTypeCategory;
- (id) init
{
    if(self = [super init])
    {
        self.ERPId = nil;
        self.ExpenseType = nil;

    }
    return self;
}

+ (SDZvw_ExpenseType*) newWithNode: (CXMLNode*) node
{
    if(node == nil) { return nil; }
    return (SDZvw_ExpenseType*)[[[SDZvw_ExpenseType alloc] initWithNode: node] autorelease];
}

- (id) initWithNode: (CXMLNode*) node {
    if(self = [super initWithNode: node])
    {
        self.Active = [[Soap getNodeValue: node withName: @"Active"] boolValue];
        self.ERPId = [Soap getNodeValue: node withName: @"ERPId"];
        self.ExpenseType = [Soap getNodeValue: node withName: @"ExpenseType"];
        self.ExpenseTypeId = [[Soap getNodeValue: node withName: @"ExpenseTypeId"] intValue];
        self.PolicyFlag = [[Soap getNodeValue: node withName: @"PolicyFlag"] boolValue];
        self.Amount = [Soap getNodeValue: node withName: @"Amount"] ;
        self.AlternateAmountLabel = [Soap getNodeValue: node withName: @"AlternateAmountLabel"];
        self.AlternateRateLabel = [Soap getNodeValue: node withName: @"AlternateRateLabel"];
        self.IsMileage = [[Soap getNodeValue:node withName:@"IsMileage"] boolValue];
        self.IsReceiptPolicy = [[Soap getNodeValue:node withName:@"IsReceiptPolicy"] boolValue];
        self.ReceiptPolicyAmount = [Soap getNodeValue: node withName: @"ReceiptPolicyAmount"];
        self.EnableMultiplier = [[Soap getNodeValue:node withName:@"EnableMultiplier"] boolValue];
        self.DisableVATFields = [[Soap getNodeValue:node withName:@"DisableVATFields"] boolValue];
        self.ExpTypeCategory = [Soap getNodeValue:node withName:@"ExpenseTypeCategory"];
        self.ExpenseTypeCategoryId = [[Soap getNodeValue: node withName: @"ExpenseTypeCategoryId"] intValue];
    }
    return self;
}

- (NSMutableString*) serialize
{
    return [self serialize: @"vw_ExpenseType"];
}

- (NSMutableString*) serialize: (NSString*) nodeName
{
    NSMutableString* s = [[NSMutableString alloc] init];
    [s appendFormat: @"<%@", nodeName];
    [s appendString: [self serializeAttributes]];
    [s appendString: @">"];
    [s appendString: [self serializeElements]];
    [s appendFormat: @"</%@>", nodeName];
    return [s autorelease];
}

- (NSMutableString*) serializeElements
{
    NSMutableString* s = [super serializeElements];
    [s appendFormat: @"<Active>%@</Active>", (self.Active)?@"true":@"false"];
    if (self.ERPId != nil) [s appendFormat: @"<ERPId>%@</ERPId>", [[self.ERPId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.ExpenseType != nil) [s appendFormat: @"<ExpenseType>%@</ExpenseType>", [[self.ExpenseType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    [s appendFormat: @"<ExpenseTypeId>%@</ExpenseTypeId>", [NSString stringWithFormat: @"%i", self.ExpenseTypeId]];
    
    //pkulkarni adding expense policy and alternate labels 01222012 
    [s appendFormat: @"<PolicyFlag>%@</PolicyFlag>", (self.PolicyFlag)?@"true":@"false"];
    if (self.Amount != nil) [s appendFormat: @"<Amount>%@</Amount>", [[self.Amount stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

    // Praveen added receipt policy and policy amount 03122013
    [s appendFormat: @"<IsReceiptPolicy>%@</IsReceiptPolicy>", (self.IsReceiptPolicy)?@"true":@"false"];
    if (self.ReceiptPolicyAmount != nil) [s appendFormat: @"<ReceiptPolicyAmount>%@</ReceiptPolicyAmount>", [[self.ReceiptPolicyAmount stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    
    if (self.AlternateAmountLabel != nil) [s appendFormat: @"<AlternateAmountLabel>%@</AlternateAmountLabel>", [[self.AlternateAmountLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.AlternateRateLabel != nil) [s appendFormat: @"<AlternateRateLabel>%@</AlternateRateLabel>", [[self.AlternateRateLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    [s appendFormat: @"<IsMileage>%@</IsMileage>", (self.IsMileage)?@"true":@"false"];
    [s appendFormat: @"<EnableMultiplier>%@</EnableMultiplier>", (self.IsMileage)?@"true":@"false"];
    [s appendFormat: @"<DisableVATFields>%@</DisableVATFields>", (self.DisableVATFields)?@"true":@"false"];
    
    
    return s;
}

- (NSMutableString*) serializeAttributes
{
    NSMutableString* s = [super serializeAttributes];

    return s;
}

-(BOOL)isEqual:(id)object{
    if(object != nil && [object isKindOfClass:[SDZvw_ExpenseType class]]) {
        return [[self serialize] isEqualToString:[object serialize]];
    }
    return NO;
}

-(NSUInteger)hash{
    return [Soap generateHash:self];

}

- (void) dealloc
{
    if(self.ERPId != nil) { [self.ERPId release]; }
    if(self.ExpenseType != nil) { [self.ExpenseType release]; }
    [super dealloc];
}

@end
