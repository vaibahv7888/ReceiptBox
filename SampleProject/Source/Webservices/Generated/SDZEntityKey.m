/*
	SDZEntityKey.h
	The implementation of properties and methods for the SDZEntityKey object.
	Generated by SudzC.com
*/
#import "SDZEntityKey.h"

#import "SDZArrayOfEntityKeyMember.h";
@implementation SDZEntityKey
	@synthesize EntityContainerName = _EntityContainerName;
	@synthesize EntityKeyValues = _EntityKeyValues;
	@synthesize EntitySetName = _EntitySetName;

	- (id) init
	{
		if(self = [super init])
		{
			self.EntityContainerName = nil;
			self.EntityKeyValues = [[[NSMutableArray alloc] init] autorelease];
			self.EntitySetName = nil;

		}
		return self;
	}

	+ (SDZEntityKey*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZEntityKey*)[[[SDZEntityKey alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.EntityContainerName = [Soap getNodeValue: node withName: @"EntityContainerName"];
			self.EntityKeyValues = [[SDZArrayOfEntityKeyMember newWithNode: [Soap getNode: node withName: @"EntityKeyValues"]] object];
			self.EntitySetName = [Soap getNodeValue: node withName: @"EntitySetName"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"EntityKey"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.EntityContainerName != nil) [s appendFormat: @"<EntityContainerName>%@</EntityContainerName>", [[self.EntityContainerName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EntityKeyValues != nil && self.EntityKeyValues.count > 0) [s appendFormat: @"<EntityKeyValues>%@</EntityKeyValues>", [SDZArrayOfEntityKeyMember serialize: self.EntityKeyValues]];
		if (self.EntitySetName != nil) [s appendFormat: @"<EntitySetName>%@</EntitySetName>", [[self.EntitySetName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZEntityKey class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.EntityContainerName != nil) { [self.EntityContainerName release]; }
		if(self.EntityKeyValues != nil) { [self.EntityKeyValues release]; }
		if(self.EntitySetName != nil) { [self.EntitySetName release]; }
		[super dealloc];
	}

@end
